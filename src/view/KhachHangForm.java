/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;
import model.KhachHang;
import DAO.KhachHangDAO;
import java.awt.Color;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author locmi
 */
public class KhachHangForm extends javax.swing.JPanel {
    private DefaultTableModel tblModel;
    private ArrayList<KhachHang> kh;
    /**
     * Creates new form KhachHang
     */
    public KhachHangForm() {
        UIManager.put("Table.showVerticalLines", true);
        initComponents();
        setSize(860, 760);
        setBackground(new Color(255, 239, 237));
        tb_KHACHHANG.setDefaultEditor(Object.class, null);
        initTable();
        kh = KhachHangDAO.getInstance().selectAll();
        loadDataToTable(kh);
        
    }
    
    public final void initTable() {
        tblModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        String[] headerTbl = new String[]{"Mã khách hàng", "Họ và tên", "Ngày sinh", "Giới tính", "Địa chỉ", "Số điện thoại", "Email"};
        tblModel.setColumnIdentifiers(headerTbl);
        tb_KHACHHANG.setModel(tblModel);
    }
    
    public void loadDataToTable(ArrayList<KhachHang> khList) {
        tblModel.setRowCount(0); 
        for (KhachHang kh : khList) {
            tblModel.addRow(new Object[]{
                kh.getId_KH(), kh.getHoTen(), kh.getNgaySinh(), kh.getGioiTinh(), kh.getDiaChi(), kh.getSoDT(), kh.getEmail()
            });
        }
    }
    
    public void refreshTableData() {
        ArrayList<KhachHang> khList = KhachHangDAO.getInstance().selectAll(); // Gọi hàm lấy tất cả khách hàng không bị xóa
        loadDataToTable(khList); // Nạp dữ liệu vào bảng
    }
    
    private KhachHang getKhachHangSelect() {
        int selectedRow = tb_KHACHHANG.getSelectedRow();
        if (selectedRow == -1) {
            return null;
        }
        String id_KH = tb_KHACHHANG.getValueAt(selectedRow, 0).toString();
        String hoTen = tb_KHACHHANG.getValueAt(selectedRow, 1).toString();
        Date ngaySinh = (Date) tb_KHACHHANG.getValueAt(selectedRow, 2);
        String gioiTinh = tb_KHACHHANG.getValueAt(selectedRow, 3).toString();
        String diaChi = tb_KHACHHANG.getValueAt(selectedRow, 4).toString();
        String soDT = tb_KHACHHANG.getValueAt(selectedRow, 5).toString();
        String email = tb_KHACHHANG.getValueAt(selectedRow, 6).toString();

        return new KhachHang(id_KH, hoTen, ngaySinh, gioiTinh, diaChi, soDT, email);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JPanel();
        Top = new javax.swing.JPanel();
        tf_SearchBar = new javax.swing.JTextField();
        lb_icAdd = new javax.swing.JLabel();
        lb_icDelete = new javax.swing.JLabel();
        lb_Update = new javax.swing.JLabel();
        lb_icReset = new javax.swing.JLabel();
        lb_icSearch = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_KHACHHANG = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Top.setBackground(new java.awt.Color(255, 102, 102));

        tf_SearchBar.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        tf_SearchBar.setToolTipText("");
        tf_SearchBar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_SearchBarFocusGained(evt);
            }
        });
        tf_SearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_SearchBarActionPerformed(evt);
            }
        });
        tf_SearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_SearchBarKeyReleased(evt);
            }
        });

        lb_icAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Insert.png"))); // NOI18N
        lb_icAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_icAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_icAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_icAddMouseExited(evt);
            }
        });

        lb_icDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Delete.png"))); // NOI18N
        lb_icDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_icDeleteMouseClicked(evt);
            }
        });

        lb_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/pencil (1) (1).png"))); // NOI18N
        lb_Update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_UpdateMouseClicked(evt);
            }
        });

        lb_icReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Update.png"))); // NOI18N
        lb_icReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_icResetMouseClicked(evt);
            }
        });

        lb_icSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Search.png"))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ KHÁCH HÀNG");

        javax.swing.GroupLayout TopLayout = new javax.swing.GroupLayout(Top);
        Top.setLayout(TopLayout);
        TopLayout.setHorizontalGroup(
            TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(tf_SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_icSearch)
                .addGap(85, 85, 85)
                .addComponent(lb_icAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(lb_icDelete)
                .addGap(71, 71, 71)
                .addComponent(lb_Update)
                .addGap(73, 73, 73)
                .addComponent(lb_icReset)
                .addGap(83, 83, 83))
            .addGroup(TopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        TopLayout.setVerticalGroup(
            TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lb_icReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_icDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_icAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_Update)
                    .addComponent(lb_icSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tf_SearchBar))
                .addContainerGap())
        );

        tb_KHACHHANG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Ngày sinh", "Giới tính", "Địa chỉ", "Số điện thoại", "Email"
            }
        ));
        jScrollPane1.setViewportView(tb_KHACHHANG);

        javax.swing.GroupLayout backLayout = new javax.swing.GroupLayout(back);
        back.setLayout(backLayout);
        backLayout.setHorizontalGroup(
            backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(backLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        backLayout.setVerticalGroup(
            backLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backLayout.createSequentialGroup()
                .addComponent(Top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 760));
    }// </editor-fold>//GEN-END:initComponents

    private void tf_SearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_SearchBarKeyReleased
        String searchText = tf_SearchBar.getText().trim().toLowerCase();
        
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) tb_KHACHHANG.getModel());
        tb_KHACHHANG.setRowSorter(sorter);
        
        RowFilter<DefaultTableModel, Object> rowFilter = RowFilter.regexFilter("(?i)" + searchText); // Sử dụng biểu thức chính quy không phân biệt hoa thường
        sorter.setRowFilter(rowFilter);  
    }//GEN-LAST:event_tf_SearchBarKeyReleased

    private void lb_icAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_icAddMouseClicked
        addKhachHang add = new addKhachHang(this);
        add.setVisible(true);
    }//GEN-LAST:event_lb_icAddMouseClicked

    private void lb_icAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_icAddMouseEntered
       
    }//GEN-LAST:event_lb_icAddMouseEntered

    private void lb_icAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_icAddMouseExited
        
    }//GEN-LAST:event_lb_icAddMouseExited

    private void lb_icDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_icDeleteMouseClicked
        if (tb_KHACHHANG.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần xoá !");
        }
        else {
            KhachHang select = getKhachHangSelect();
            int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn khách hàng khoản này ?", "Xác nhận xóa tài khoản", JOptionPane.YES_NO_OPTION);
            if (chk == JOptionPane.YES_OPTION) {
                try {
                    int res = KhachHangDAO.getInstance().delete(select);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(this, "Xoá khách hàng thành công!");
                        loadDataToTable(KhachHangDAO.getInstance().selectAll());
                    }
                    else {
                        JOptionPane.showMessageDialog(this, "Xóa khách hàng thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (RuntimeException e) {
                    String errorMessage = e.getMessage();
                    if (errorMessage.contains("Khách hàng đang có thẻ tập")) {
                        JOptionPane.showMessageDialog(this, "Không thể xóa khách hàng. Khách hàng đang có thẻ tập!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    }
                    else if (errorMessage.contains("Khách hàng đang thuê huấn luyện viên")) {
                        JOptionPane.showMessageDialog(this, "Không thể xóa khách hàng. Khách hàng đang thuê huấn luyện viên!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_lb_icDeleteMouseClicked

    private void lb_UpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_UpdateMouseClicked
        KhachHang select = getKhachHangSelect();
        if (select != null) {
            updateKhachHang update = new updateKhachHang(select, this);
            update.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một khách hàng để chỉnh sửa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_lb_UpdateMouseClicked

    private void lb_icResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_icResetMouseClicked
        refreshTable();
    }//GEN-LAST:event_lb_icResetMouseClicked

    private void tf_SearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_SearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_SearchBarActionPerformed

    private void tf_SearchBarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_SearchBarFocusGained
        if(tf_SearchBar.getText().equals("Tìm kiếm ..."))
            tf_SearchBar.setText("");
    }//GEN-LAST:event_tf_SearchBarFocusGained
    
    public void refreshTable() {
        ArrayList<KhachHang> kh = KhachHangDAO.getInstance().selectAll(); // Gọi hàm lấy tất cả khách hàng không bị xóa
        loadDataToTable(kh);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Top;
    private javax.swing.JPanel back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_Update;
    private javax.swing.JLabel lb_icAdd;
    private javax.swing.JLabel lb_icDelete;
    private javax.swing.JLabel lb_icReset;
    private javax.swing.JLabel lb_icSearch;
    private javax.swing.JTable tb_KHACHHANG;
    private javax.swing.JTextField tf_SearchBar;
    // End of variables declaration//GEN-END:variables
}
