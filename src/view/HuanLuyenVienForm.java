/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.awt.Color;
import model.HuanLuyenVien;
import DAO.HuanLuyenVienDAO;
import controller.CurrencyUtils;
import java.sql.Date;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class HuanLuyenVienForm extends javax.swing.JPanel {

    private DefaultTableModel tblModel;
    private ArrayList<HuanLuyenVien> hlv;  
    
    public HuanLuyenVienForm() {
        UIManager.put("Table.showVerticalLines", true);
        initComponents();
        setSize(860, 760);
        setBackground(new Color(255, 239, 237));
        jTable1.setDefaultEditor(Object.class, null);
        initTable();
        hlv = HuanLuyenVienDAO.getInstance().selectAll();
        loadDataToTable(hlv);
    }

    public final void initTable() {
        tblModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        String[] headerTbl = new String[]{"Mã huấn luyện viên", "Họ và tên", "Ngày sinh", "Giới tính", "Địa chỉ", "Số điện thoại","Ngày vào làm", "Chuyên môn", "Email", "Giá thuê"};
        tblModel.setColumnIdentifiers(headerTbl);
        jTable1.setModel(tblModel);
    }
    
    public void loadDataToTable(ArrayList<HuanLuyenVien> hlvList) {
        tblModel.setRowCount(0); 
        for (HuanLuyenVien hlv : hlvList) {
            tblModel.addRow(new Object[]{
                hlv.getId_HLV(), hlv.getHoTen(), hlv.getNgaySinh(), hlv.getGioiTinh(), hlv.getDiaChi(), hlv.getSoDT(), hlv.getNgayVL(), hlv.getChuyenMon(), hlv.getEmail(), CurrencyUtils.formatCurrency(hlv.getGiaThue())
            });
        }
    }
    public void refreshTableData() {
        ArrayList<HuanLuyenVien> hlvList = HuanLuyenVienDAO.getInstance().selectAll(); // Gọi hàm lấy tất cả khách hàng không bị xóa
        loadDataToTable(hlvList); // Nạp dữ liệu vào bảng
    }
    
    private HuanLuyenVien getHuanLuyenVienSelect() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            return null;
        }
        String id_KH = jTable1.getValueAt(selectedRow, 0).toString();
        String hoTen = jTable1.getValueAt(selectedRow, 1).toString();
        Date ngaySinh = (Date) jTable1.getValueAt(selectedRow, 2);
        String gioiTinh = jTable1.getValueAt(selectedRow, 3).toString();
        String diaChi = jTable1.getValueAt(selectedRow, 4).toString();
        String soDT = jTable1.getValueAt(selectedRow, 5).toString();
        Date ngayVL = (Date) jTable1.getValueAt(selectedRow, 6);
        String chuyenMon = jTable1.getValueAt(selectedRow, 7).toString();
        String email = jTable1.getValueAt(selectedRow, 8).toString();
        String giaThueStr =  jTable1.getValueAt(selectedRow, 9).toString();
        
        double giaThue = 0;
        try {
            giaThue = CurrencyUtils.parseCurrency(giaThueStr);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        return new HuanLuyenVien(id_KH, hoTen, ngaySinh, gioiTinh, diaChi, soDT,ngayVL, chuyenMon, email,giaThue);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TextTimKiem = new javax.swing.JTextField();
        labelSearch = new javax.swing.JLabel();
        labelInsert = new javax.swing.JLabel();
        labelDelete = new javax.swing.JLabel();
        labelPencil = new javax.swing.JLabel();
        labelReset = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        TextTimKiem.setText("Tìm kiếm ...");
        TextTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextTimKiemFocusGained(evt);
            }
        });
        TextTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextTimKiemActionPerformed(evt);
            }
        });
        TextTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextTimKiemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextTimKiemKeyReleased(evt);
            }
        });

        labelSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Search.png"))); // NOI18N

        labelInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Insert.png"))); // NOI18N
        labelInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelInsertMouseClicked(evt);
            }
        });

        labelDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Delete.png"))); // NOI18N
        labelDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelDeleteMouseClicked(evt);
            }
        });

        labelPencil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/pencil (1) (1).png"))); // NOI18N
        labelPencil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelPencilMouseClicked(evt);
            }
        });

        labelReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/ic_Update.png"))); // NOI18N
        labelReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelResetMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                                              Huấn luyện viên");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(TextTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelSearch)
                .addGap(58, 58, 58)
                .addComponent(labelInsert)
                .addGap(77, 77, 77)
                .addComponent(labelDelete)
                .addGap(56, 56, 56)
                .addComponent(labelPencil)
                .addGap(62, 62, 62)
                .addComponent(labelReset)
                .addContainerGap(85, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPencil)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(labelInsert)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelReset, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelSearch)))
                        .addComponent(labelDelete)))
                .addGap(15, 15, 15))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HLV", "Họ và tên ", "NS", "GT", "Địa chỉ", "Số điện thoại", "Ngày VL", "Chuyên môn", "Email", "Giá thuê"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(50);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TextTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextTimKiemActionPerformed

     private void refreshTable() {
        ArrayList<HuanLuyenVien> nv = HuanLuyenVienDAO.getInstance().selectAll();
        loadDataToTable(nv);
    }
    private void TextTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextTimKiemFocusGained
       if(TextTimKiem.getText().equals("Tìm kiếm ..."))
            TextTimKiem.setText("");
    }//GEN-LAST:event_TextTimKiemFocusGained

    private void TextTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextTimKiemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextTimKiemKeyPressed

    private void TextTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextTimKiemKeyReleased
        String searchText = TextTimKiem.getText().trim().toLowerCase();
     
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) jTable1.getModel());
        jTable1.setRowSorter(sorter);
        
        RowFilter<DefaultTableModel, Object> rowFilter = RowFilter.regexFilter("(?i)" + searchText); 
        sorter.setRowFilter(rowFilter);
    }//GEN-LAST:event_TextTimKiemKeyReleased

    private void labelResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelResetMouseClicked
            refreshTable();
    }//GEN-LAST:event_labelResetMouseClicked

    private void labelDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelDeleteMouseClicked
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn huấn luyện viên cần xóa!");
        } 
        else {
        HuanLuyenVien select = getHuanLuyenVienSelect();
        int chk = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa huấn luyện viên này?", "Xác nhận xóa huấn luyện viên", JOptionPane.YES_NO_OPTION);
        
        if (chk == JOptionPane.YES_OPTION) {
            try {
                int res = HuanLuyenVienDAO.getInstance().delete(select);
                if (res > 0) {
                    JOptionPane.showMessageDialog(this, "Xóa huấn luyện viên thành công!");
                        // Tải lại danh sách nhân viên trên table
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.removeRow(jTable1.getSelectedRow());
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa huấn luyện viên thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } catch (RuntimeException e) {
                String errorMessage = e.getMessage();
                if (errorMessage.contains("Huấn luyện viên đang được thuê")) {
                    JOptionPane.showMessageDialog(this, "Không thể xóa huấn luyện viên. Huấn luyện viên đang được thuê.", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        }
    }//GEN-LAST:event_labelDeleteMouseClicked

    private void labelInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelInsertMouseClicked
        addPT add = new addPT(this);
        add.setVisible(true);
    }//GEN-LAST:event_labelInsertMouseClicked

    private void labelPencilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelPencilMouseClicked
        HuanLuyenVien select = getHuanLuyenVienSelect();
        if (select != null) {
            updatePT update = new updatePT(select, this);
            update.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một khách hàng để chỉnh sửa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_labelPencilMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextTimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelDelete;
    private javax.swing.JLabel labelInsert;
    private javax.swing.JLabel labelPencil;
    private javax.swing.JLabel labelReset;
    private javax.swing.JLabel labelSearch;
    // End of variables declaration//GEN-END:variables
}
